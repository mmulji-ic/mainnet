{
    "id": "187",
    "tx_hash": "173D38296F87B6292F1C79D7AA1E707F0DCC6A05C1713CC33D5ADEE1CF9983AB",
    "proposer": "cosmos1zwgl38tc4d59cq0wkfn2nzkwapu2pd5s5twws9",
    "title": "v9-Lambda",
    "description": "# V9 Lambda upgrade (with Replicated Security)\n\n***Terminology note:** Interchain Security is the name for a family of protocols. The feature being discussed here is in this family, but more accurately termed “Replicated Security”. In the past it has been referred to as Interchain Security v1, or ICS, but going forward we refer to it as Replicated Security.*\n\n## Summary\nThis on-chain upgrade governance proposal is to adopt . By voting YES to this proposal, you approve of adding these updates to the Cosmos Hub.  \n\nThe Cosmos Hub is upgrading its security system with a new feature called Replicated Security. This will allow the Cosmos Hub to provide its strong security to other blockchains, which are called 'consumer chains'. The cost to censor or control a consumer chain with an economic attack is the same as the cost to censor or control the Cosmos Hub itself. This means that consumer chains can benefit from the Cosmos Hub's security without having to maintain their own validator sets.  \n\nReplicated Security works through the IBC protocol. Consumer chains receive periodic IBC packets containing the up-to-date validator set of the Cosmos Hub and use this to update their own validator sets, effectively replicating the Hub's validator set. This means that the Cosmos Hub's validators can validate multiple chains at once with the same stake.  \n\nIn exchange for this service, consumer chains are expected to send a portion of their fees and inflation to the Cosmos Hub validators and delegators. These tokens will then be included as part of the Cosmos Hub's staking rewards.\n\n## Software details\n### Updates\n* (feat) Add [Interchain-Security](https://github.com/cosmos/interchain-security) [v1.0.0](https://github.com/cosmos/interchain-security/releases/tag/v1.0.0) provider module. See the [ICS Spec](https://github.com/cosmos/ibc/blob/main/spec/app/ics-028-cross-chain-validation/README.md) for more details.\n* (gaia) Bump [cosmos-sdk](https://github.com/cosmos/cosmos-sdk) to [v0.45.13-ics](https://github.com/cosmos/cosmos-sdk/releases/tag/v0.45.13-ics). See [CHANGELOG.md](https://github.com/cosmos/cosmos-sdk/blob/releases/tag/v0.45.13-ics) for details.\n* (gaia) Bump [ibc-go](https://github.com/cosmos/ibc-go) to [v4.2.0](https://github.com/cosmos/ibc-go/blob/release/v4.2.x/CHANGELOG.md). See [v4.2 Release Notes](https://github.com/cosmos/ibc-go/releases/tag/v4.2.0) for details.\n* (gaia) Bump [tendermint](https://github.com/informalsystems/tendermint) to [0.34.26](https://github.com/informalsystems/tendermint/tree/v0.34.26). See [CHANGELOG.md](https://github.com/informalsystems/tendermint/blob/v0.34.26/CHANGELOG.md#v03426) for details.\n* (gaia) Bump [packet-forward-middleware](https://github.com/strangelove-ventures/packet-forward-middleware) to [v4.0.4](https://github.com/strangelove-ventures/packet-forward-middleware/releases/tag/v4.0.4).\n* (tests) Add [E2E ccv tests](https://github.com/cosmos/gaia/blob/main/tests/e2e/e2e_gov_test.go#L138). Tests covering new functionality introduced by the provider module to add and remove a consumer chain via governance proposal.\n* (tests) Add [integration ccv tests](https://github.com/cosmos/gaia/blob/main/tests/ics/interchain_security_test.go). Imports Interchain-Security's  and implements Gaia as the provider chain.\n\n### On-Chain Upgrade Process\nWhen the network reaches the halt height, the state machine program of the Cosmos Hub will be halted. The classic method for upgrading requires all validators and node operators to manually substitute the existing state machine binary with the new binary.  \n\nAlternatively node operators can use the Cosmovisor utility to swap the binaries automatically. Cosmovisor also includes the ability to download the binaries automatically before swapping them. Documentation on Cosmovisor can be found [here](https://github.com/cosmos/cosmos-sdk/tree/main/tools/cosmovisor). If you are interested in trying Cosmosvisor with a simulated local upgrade please see the [local testnet documentation](https://github.com/cosmos/testnets/tree/master/local).\n\n### Potential Risk Factors\nAlthough very extensive testing and simulation has taken place there always still exists a risk that the Cosmos Hub might experience problems due to potential bugs or errors from the new features. In the case of serious problems, validators should stop operating the network immediately.  \n\nCosmos Core Contributors will coordinate with validators in the #validators-verified channel of the [Cosmos Developer Discord](https://discord.gg/cosmosnetwork) to create and execute a contingency plan. Likely this will be an emergency release with fixes or the recommendation to consider the upgrade aborted and revert back to the previous release of gaia (v8.0.1).\n\n## Governance votes\nThe following items summarize the voting options and what it means for this proposal:\n\n* YES - You approve of adding these updates to the Cosmos Hub.\n* NO - You don’t approve of adding these updates to the Cosmos Hub. Please indicate why on the Cosmos Hub forum.\n* NO WITH VETO - A ‘NoWithVeto’ vote indicates a proposal either (1) is deemed to be spam, i.e., irrelevant to Cosmos Hub, (2) disproportionately infringes on minority interests, or (3) violates or encourages violation of the rules of engagement as currently set out by Cosmos Hub governance. If the number of ‘NoWithVeto’ votes is greater than a third of total votes, the proposal is rejected and the deposits are burned.\n* ABSTAIN - You wish to contribute to quorum but you formally decline to vote either for or against the proposal.\n\n## Appendix: Replicated Security\n### Changes to this proposal\nThis proposal went onto the governance forum in mid-December. Since that time, we have made one change to the protocol. In response to the only high-severity finding in the Informal audit report (see 'Testing and audits below'), and feedback from the community, we have made it so that the slashing and tombstoning of validators for offenses on consumer chains must be approved by a governance vote. This will have a [very minimal impact](https://informal.systems/blog/governance-gated-vs-automatic-equivocation-slashing) on the operation and security of consumer chains while protecting the Cosmos Hub from possibility of an attack by a rogue consumer chain.  \n\nThis governance gating is temporary until the Cosmos Hub is able to cryptographically verify proof of double signing in an upcoming release of Replicated Security. This does not give governance the ability to slash validators arbitrarily, but rather to approve slash packets that have already been transmitted from a consumer chain.\n\n### The ATOM economic zone\nIt is anticipated that consumer chains using Replicated Security will collaborate closely in an 'ATOM economic zone'. This is expected to have a snowball effect, with the Cosmos Hub securing a growing group of high-value decentralized protocols. Already, some prominent projects such as a smart-contracting platform, an AMM, several liquid staking providers and others have expressed interest in using Replicated Security from the Cosmos Hub.  \n\nReplicated Security can also be used to further the cause of “Hub minimalism”. Any new features to the Hub, even if they are core to the Hub's functionality, can be launched as consumer chains. This allows the Hub to scale better and separate release cycles, enabling faster deployment of new features.\n\n### Onboarding a consumer chain\nThis governance proposal will not launch any consumer chains on its own. Instead, it will only add the necessary code to the Cosmos Hub to enable Replicated Security. In order to launch, each consumer chain must submit their own governance proposal to be voted on separately.  \n\nIt is expected that before launch, a consumer chain will have participated in a Cosmos Hub Replicated Security testnet, conducted their own testnets, and undergone an audit by reputable auditors.  \n\nOnce a consumer chain proposal passes, Cosmos Hub validators can begin running the consumer chain and receiving rewards. The chain will only start if more than two-thirds (by power) of the Cosmos Hub validators decide to run the consumer chain.\n\n### Offboarding a consumer chain\nOnce the consumer chain is running, validators can be slashed and jailed for consensus faults such as downtime and double signing on the consumer chain.  \n\nAt any point in time, one-third (by power) of the Cosmos Hub validators will be able to stop running the consumer chain at once: the chain will halt, and none of them will be slashed for downtime.  \n\nThe offboardings of consumer chains will have strong social norms to protect both sides, and any kind of forceful exit will only be coordinated in extreme cases such as protocol failures or attacks.  \n\nFor normal cases, a separate governance proposal will be made to remove a consumer chain, which will allow Cosmos Hub validators to stop running it.\n\n### Further resources and information:\n#### Archival links\n* [IPFS pin of unabridged proposal text](https://gateway.pinata.cloud/ipfs/QmY7h5BV725yifQavezbLVPM7nhG5UGpwk7pALEw8GNcU9)\n* [Forum discussion](https://forum.cosmos.network/t/proposal-draft-v9-lambda-upgrade-with-replicated-security/8766)\n\n#### Essays and detailed feature explanations\n* [Preparing for Replicated Security](https://forum.cosmos.network/t/preparing-for-replicated-security/8925)\n* [Governance-Gated Slashing vs Automatic Equivocation Slashing](https://informal.systems/blog/governance-gated-vs-automatic-equivocation-slashing)\n\n#### Testing and audits\n* [Informal Systems Audit team results](https://informal.systems/replicated-security-audit.pdf)\n* [Findings from Game of Chains and Beyond](https://forum.cosmos.network/t/findings-from-game-of-chains-and-beyond/9720)\n* [ICS software tests](https://github.com/cosmos/interchain-security/tree/main/tests)",
    "proposal_type": "SoftwareUpgrade",
    "proposal_status": "PROPOSAL_STATUS_PASSED",
    "submit_time": "2023-02-21T16:55:43.122Z",
    "voting_start_time": "2023-02-21T17:08:29.018Z",
    "voting_end_time": "2023-03-07T17:08:29.018Z",
    "deposit_end_time": "2023-03-07T16:55:43.122Z",
    "notification_status": "SubmitNotified",
    "metadata": null,
    "gov_rest_path": "v1beta1",
    "messages": [
        {
            "type": "/cosmos.upgrade.v1beta1.SoftwareUpgradeProposal",
            "display": "Software Upgrade Proposal",
            "body": [
                {
                    "label": "Title",
                    "value": "v9-Lambda"
                },
                {
                    "label": "Description",
                    "value": "# V9 Lambda upgrade (with Replicated Security)\n\n***Terminology note:** Interchain Security is the name for a family of protocols. The feature being discussed here is in this family, but more accurately termed “Replicated Security”. In the past it has been referred to as Interchain Security v1, or ICS, but going forward we refer to it as Replicated Security.*\n\n## Summary\nThis on-chain upgrade governance proposal is to adopt . By voting YES to this proposal, you approve of adding these updates to the Cosmos Hub.  \n\nThe Cosmos Hub is upgrading its security system with a new feature called Replicated Security. This will allow the Cosmos Hub to provide its strong security to other blockchains, which are called 'consumer chains'. The cost to censor or control a consumer chain with an economic attack is the same as the cost to censor or control the Cosmos Hub itself. This means that consumer chains can benefit from the Cosmos Hub's security without having to maintain their own validator sets.  \n\nReplicated Security works through the IBC protocol. Consumer chains receive periodic IBC packets containing the up-to-date validator set of the Cosmos Hub and use this to update their own validator sets, effectively replicating the Hub's validator set. This means that the Cosmos Hub's validators can validate multiple chains at once with the same stake.  \n\nIn exchange for this service, consumer chains are expected to send a portion of their fees and inflation to the Cosmos Hub validators and delegators. These tokens will then be included as part of the Cosmos Hub's staking rewards.\n\n## Software details\n### Updates\n* (feat) Add [Interchain-Security](https://github.com/cosmos/interchain-security) [v1.0.0](https://github.com/cosmos/interchain-security/releases/tag/v1.0.0) provider module. See the [ICS Spec](https://github.com/cosmos/ibc/blob/main/spec/app/ics-028-cross-chain-validation/README.md) for more details.\n* (gaia) Bump [cosmos-sdk](https://github.com/cosmos/cosmos-sdk) to [v0.45.13-ics](https://github.com/cosmos/cosmos-sdk/releases/tag/v0.45.13-ics). See [CHANGELOG.md](https://github.com/cosmos/cosmos-sdk/blob/releases/tag/v0.45.13-ics) for details.\n* (gaia) Bump [ibc-go](https://github.com/cosmos/ibc-go) to [v4.2.0](https://github.com/cosmos/ibc-go/blob/release/v4.2.x/CHANGELOG.md). See [v4.2 Release Notes](https://github.com/cosmos/ibc-go/releases/tag/v4.2.0) for details.\n* (gaia) Bump [tendermint](https://github.com/informalsystems/tendermint) to [0.34.26](https://github.com/informalsystems/tendermint/tree/v0.34.26). See [CHANGELOG.md](https://github.com/informalsystems/tendermint/blob/v0.34.26/CHANGELOG.md#v03426) for details.\n* (gaia) Bump [packet-forward-middleware](https://github.com/strangelove-ventures/packet-forward-middleware) to [v4.0.4](https://github.com/strangelove-ventures/packet-forward-middleware/releases/tag/v4.0.4).\n* (tests) Add [E2E ccv tests](https://github.com/cosmos/gaia/blob/main/tests/e2e/e2e_gov_test.go#L138). Tests covering new functionality introduced by the provider module to add and remove a consumer chain via governance proposal.\n* (tests) Add [integration ccv tests](https://github.com/cosmos/gaia/blob/main/tests/ics/interchain_security_test.go). Imports Interchain-Security's  and implements Gaia as the provider chain.\n\n### On-Chain Upgrade Process\nWhen the network reaches the halt height, the state machine program of the Cosmos Hub will be halted. The classic method for upgrading requires all validators and node operators to manually substitute the existing state machine binary with the new binary.  \n\nAlternatively node operators can use the Cosmovisor utility to swap the binaries automatically. Cosmovisor also includes the ability to download the binaries automatically before swapping them. Documentation on Cosmovisor can be found [here](https://github.com/cosmos/cosmos-sdk/tree/main/tools/cosmovisor). If you are interested in trying Cosmosvisor with a simulated local upgrade please see the [local testnet documentation](https://github.com/cosmos/testnets/tree/master/local).\n\n### Potential Risk Factors\nAlthough very extensive testing and simulation has taken place there always still exists a risk that the Cosmos Hub might experience problems due to potential bugs or errors from the new features. In the case of serious problems, validators should stop operating the network immediately.  \n\nCosmos Core Contributors will coordinate with validators in the #validators-verified channel of the [Cosmos Developer Discord](https://discord.gg/cosmosnetwork) to create and execute a contingency plan. Likely this will be an emergency release with fixes or the recommendation to consider the upgrade aborted and revert back to the previous release of gaia (v8.0.1).\n\n## Governance votes\nThe following items summarize the voting options and what it means for this proposal:\n\n* YES - You approve of adding these updates to the Cosmos Hub.\n* NO - You don’t approve of adding these updates to the Cosmos Hub. Please indicate why on the Cosmos Hub forum.\n* NO WITH VETO - A ‘NoWithVeto’ vote indicates a proposal either (1) is deemed to be spam, i.e., irrelevant to Cosmos Hub, (2) disproportionately infringes on minority interests, or (3) violates or encourages violation of the rules of engagement as currently set out by Cosmos Hub governance. If the number of ‘NoWithVeto’ votes is greater than a third of total votes, the proposal is rejected and the deposits are burned.\n* ABSTAIN - You wish to contribute to quorum but you formally decline to vote either for or against the proposal.\n\n## Appendix: Replicated Security\n### Changes to this proposal\nThis proposal went onto the governance forum in mid-December. Since that time, we have made one change to the protocol. In response to the only high-severity finding in the Informal audit report (see 'Testing and audits below'), and feedback from the community, we have made it so that the slashing and tombstoning of validators for offenses on consumer chains must be approved by a governance vote. This will have a [very minimal impact](https://informal.systems/blog/governance-gated-vs-automatic-equivocation-slashing) on the operation and security of consumer chains while protecting the Cosmos Hub from possibility of an attack by a rogue consumer chain.  \n\nThis governance gating is temporary until the Cosmos Hub is able to cryptographically verify proof of double signing in an upcoming release of Replicated Security. This does not give governance the ability to slash validators arbitrarily, but rather to approve slash packets that have already been transmitted from a consumer chain.\n\n### The ATOM economic zone\nIt is anticipated that consumer chains using Replicated Security will collaborate closely in an 'ATOM economic zone'. This is expected to have a snowball effect, with the Cosmos Hub securing a growing group of high-value decentralized protocols. Already, some prominent projects such as a smart-contracting platform, an AMM, several liquid staking providers and others have expressed interest in using Replicated Security from the Cosmos Hub.  \n\nReplicated Security can also be used to further the cause of “Hub minimalism”. Any new features to the Hub, even if they are core to the Hub's functionality, can be launched as consumer chains. This allows the Hub to scale better and separate release cycles, enabling faster deployment of new features.\n\n### Onboarding a consumer chain\nThis governance proposal will not launch any consumer chains on its own. Instead, it will only add the necessary code to the Cosmos Hub to enable Replicated Security. In order to launch, each consumer chain must submit their own governance proposal to be voted on separately.  \n\nIt is expected that before launch, a consumer chain will have participated in a Cosmos Hub Replicated Security testnet, conducted their own testnets, and undergone an audit by reputable auditors.  \n\nOnce a consumer chain proposal passes, Cosmos Hub validators can begin running the consumer chain and receiving rewards. The chain will only start if more than two-thirds (by power) of the Cosmos Hub validators decide to run the consumer chain.\n\n### Offboarding a consumer chain\nOnce the consumer chain is running, validators can be slashed and jailed for consensus faults such as downtime and double signing on the consumer chain.  \n\nAt any point in time, one-third (by power) of the Cosmos Hub validators will be able to stop running the consumer chain at once: the chain will halt, and none of them will be slashed for downtime.  \n\nThe offboardings of consumer chains will have strong social norms to protect both sides, and any kind of forceful exit will only be coordinated in extreme cases such as protocol failures or attacks.  \n\nFor normal cases, a separate governance proposal will be made to remove a consumer chain, which will allow Cosmos Hub validators to stop running it.\n\n### Further resources and information:\n#### Archival links\n* [IPFS pin of unabridged proposal text](https://gateway.pinata.cloud/ipfs/QmY7h5BV725yifQavezbLVPM7nhG5UGpwk7pALEw8GNcU9)\n* [Forum discussion](https://forum.cosmos.network/t/proposal-draft-v9-lambda-upgrade-with-replicated-security/8766)\n\n#### Essays and detailed feature explanations\n* [Preparing for Replicated Security](https://forum.cosmos.network/t/preparing-for-replicated-security/8925)\n* [Governance-Gated Slashing vs Automatic Equivocation Slashing](https://informal.systems/blog/governance-gated-vs-automatic-equivocation-slashing)\n\n#### Testing and audits\n* [Informal Systems Audit team results](https://informal.systems/replicated-security-audit.pdf)\n* [Findings from Game of Chains and Beyond](https://forum.cosmos.network/t/findings-from-game-of-chains-and-beyond/9720)\n* [ICS software tests](https://github.com/cosmos/interchain-security/tree/main/tests)",
                    "type": "MARKDOWN"
                },
                {
                    "label": "Height",
                    "value": "14470501"
                },
                {
                    "label": "Upgrade At",
                    "value": "14470501",
                    "type": "UPGRADE_AT"
                },
                {
                    "label": "Info",
                    "value": {
                        "binaries": {
                            "linux/amd64": "https://github.com/cosmos/gaia/releases/download/v9.0.0/gaiad-v9.0.0-linux-amd64?checksum=sha256:082b8d8b6da364b3d981a6e12822dcc260326b1f0948eb9fe3d7798f0ff76c1e",
                            "linux/arm64": "https://github.com/cosmos/gaia/releases/download/v9.0.0/gaiad-v9.0.0-linux-arm64?checksum=sha256:c07cafc8afdbba962d6dd41a913c72aafa2c94c0c77f12604f931ef03d33c208",
                            "darwin/amd64": "https://github.com/cosmos/gaia/releases/download/v9.0.0/gaiad-v9.0.0-darwin-amd64?checksum=sha256:d24249ba4de991fc8a90bf0798445e4dc27973e684ccdd4f7995327ac19cb0f1",
                            "darwin/arm64": "https://github.com/cosmos/gaia/releases/download/v9.0.0/gaiad-v9.0.0-darwin-arm64?checksum=sha256:fddb84763759b62ab1c6044c38b003c7cbd0cea82eac5e99e6bee6f03ed83dcf",
                            "windows/amd64": "https://github.com/cosmos/gaia/releases/download/v9.0.0/gaiad-v9.0.0-windows-amd64.exe?checksum=sha256:c540b9273be49e846084f9190db0dea3b66334b7dd220d832848c25d5fbf5098"
                        }
                    },
                    "type": "JSON_VIEW"
                },
                {
                    "label": "Name",
                    "value": "v9-Lambda"
                },
                {
                    "label": "Time",
                    "value": "0001-01-01T00:00:00Z"
                },
                {
                    "label": "Upgraded Client State",
                    "value": null
                }
            ]
        }
    ],
    "moniker": "",
    "initial_deposit": {
        "denom": "uatom",
        "amount": "1000"
    },
    "total_deposit": [
        {
            "denom": "uatom",
            "amount": "250021000"
        }
    ],
    "voteMeta": {
        "yes": "51562",
        "no": "92",
        "no_with_veto": "20",
        "abstain": "90",
        "weighted": "3",
        "yes_amount": "116247542408437",
        "no_amount": "11181672345",
        "no_with_veto_amount": "4604639776",
        "abstain_amount": "597568678172"
    }
}